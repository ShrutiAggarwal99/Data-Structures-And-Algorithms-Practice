
//https://practice.geeksforgeeks.org/problems/intersection-point-in-y-shapped-linked-lists/1

/*
Here's a simple trick. As the values are always positive, so traverse through the first linked list, and multiply all values by -1.
Now start traversing from the second head. If any negative value is encountered, means that is the merge point. So return negative of that value.
*/



//Though I did it other way
//T.C : O(m+n), where m,n are lengths of each LL



/* Should return data of intersection point of two linked
   lists head1 and head2.
   If there is no intersecting point, then return -1.
*/
   
   
int intersectPoint(Node* head1, Node* head2)
{
    // Your Code Here
    Node *node1=head1, *node2=head2;
    while(node1!=node2){
        if(!node1) node1=head2;
        if(!node2) node2=head1;
        node1=node1->next;
        node2=node2->next;
    }
    
    if(node1) return node1->data;
    return -1;
}
